static point p1start = Point(15, 45);
static point p2start = Point(35, 45);

void issueTrain(unit building) {
  if (UnitGetType(building) == "Barracks") {
    gg_issueOrder(building, "barracks train marine", "replace");
  } else if (UnitGetType(building) == "EngineeringBay") {
    gg_issueOrder(building, "barracks train reaper", "replace");
  } else if (UnitGetType(building) == "Bunker") {
    gg_issueOrder(building, "barracks train marauder", "replace");
  } else {
    gg_log("Unhandled building type: ");
    gg_log(UnitGetType(building));
  }
}

bool trigger_trained(bool testConds, bool runActions) {
  point target;
  if (!runActions) { return true; }
  if (UnitGetOwner(EventUnitProgressUnit()) == 1) {
    target = p2start;
  } else {
    target = p1start;
  }
  issueTrain(EventUnit());
  gg_issueOrderToPoint(EventUnitProgressUnit(), "attack", target, "replace");
  return true;
}

bool trigger_constructed(bool testConds, bool runActions) {
  if (!runActions) { return true; }
  issueTrain(EventUnitProgressUnit());
  return true;
}

void initPlayer(int player, point start, point target) {
  unitgroup ug;
  ug = gg_createUnitsAtPoint(player, "SCV", 1, start);
  gg_setPlayerMinerals(player, 1000);
}

void gg_MapInit() {

  initPlayer(1, p1start, p2start);
  initPlayer(2, p2start, p1start);

  gg_event_unitTrained("trigger_trained", null);
  gg_event_unitConstructed("trigger_constructed", null);
}
