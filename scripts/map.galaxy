static point p1start = Point(15, 45);
static point p2start = Point(35, 45);

// native region RegionRect (fixed minx, fixed miny, fixed maxx, fixed maxy);
static region p1BuildRegion = RegionRect(10, 40, 20, 50);
static region p2BuildRegion = RegionRect(30, 40, 40, 50);

void issueTrain(unit building) {
  if (UnitGetType(building) == "Barracks") {
    gg_issueOrder(building, "barracks train marine", "replace");
  } else if (UnitGetType(building) == "EngineeringBay") {
    gg_issueOrder(building, "barracks train reaper", "replace");
  } else if (UnitGetType(building) == "Bunker") {
    gg_issueOrder(building, "barracks train marauder", "replace");
  } else {
    gg_log("Unhandled building type: ");
    gg_log(UnitGetType(building));
  }
}

bool trigger_trained(bool testConds, bool runActions) {
  point target;
  if (!runActions) { return true; }
  if (UnitGetOwner(EventUnitProgressUnit()) == 1) {
    target = p2start;
  } else {
    target = p1start;
  }
  issueTrain(EventUnit());
  gg_issueOrderToPoint(EventUnitProgressUnit(), "attack", target, "replace");
  return true;
}

bool trigger_constructed(bool testConds, bool runActions) {
  if (!runActions) { return true; }
  issueTrain(EventUnitProgressUnit());
  return true;
}

bool trigger_cc_died(bool testConds, bool runActions) {
  if (!runActions) { return true; }
  if (UnitGetType(EventUnit()) != "CommandCenter") { return true; }
  if (UnitGetOwner(EventUnit()) == 1) {
    gg_gameOver_victory(2);
    gg_gameOver_defeat(1);
  } else {
    gg_gameOver_victory(1);
    gg_gameOver_defeat(2);
  }
  return true;
}

void initPlayer(int player, point start) {
  unit cc;
  cc = gg_createUnitAtPoint(player, "CommandCenter", start);
  gg_createUnitsAtPoint(player, "SCV", 1, start);
  gg_setPlayerMinerals(player, 1000);
}

bool trigger_leftRegion(bool testConds, bool runActions) {
  if (!runActions) { return true; }
  if (UnitGetType(EventUnit()) != "SCV") { return true; }
  UnitSetPosition(EventUnit(), RegionGetCenter(EventUnitRegion()), true);
  return true;
}
void gg_MapInit() {
  initPlayer(1, p1start);
  initPlayer(2, p2start);

  gg_event_unitLeftRegion("trigger_leftRegion", null, p1BuildRegion);
  gg_event_unitLeftRegion("trigger_leftRegion", null, p2BuildRegion);

  gg_event_unitTrained("trigger_trained", null);
  gg_event_unitConstructed("trigger_constructed", null);
  gg_event_unitDied("trigger_cc_died", null);
}
